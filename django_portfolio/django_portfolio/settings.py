"""
Django settings for django_portfolio project.

Generated by 'django-admin startproject' using Django 3.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os

#.env   gitignored file.
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
#used to make hashes. but unlike salt, this is not seen by everyone.
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    #templates kohdassa lisätty
    #appi/kansio = blog -> apps.py -> class BlogConfig(AppConfig):    
    'blog.apps.BlogConfig',
    #usersapp = registration etc.    class UsersConfig(AppConfig): in users\apps.py
    'users.apps.UsersConfig',
    #crispy form styling. 
    #tän tiedoston lopussa on myös että käyttää bootstrap4
    #lisäksi sinne html tiedostoon ylös { % load crispy_forms_tags
    'crispy_forms',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django_portfolio.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_portfolio.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/
STATIC_URL = '/static/'

#täällä on kaikki uploadatut kuvat jne. ne ei voi olla databaseissa koska se ois liian hidasta
#BASE_DIR = projects base direcory, ja media on sen alakansio.   os.path jotta millä vaan käyttiksellä toimii
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

#public URL of media directory. how we are going to access from browser
MEDIA_URL = '/media/'

CRISPY_TEMPLATE_PACK = 'bootstrap4'

#kun login on onnistunut, niin suuntaa tonne. 
#default ilman tätä riviä olisi:    Request Method: GET    Request URL: http://127.0.0.1:8000/accounts/profile/
LOGIN_REDIRECT_URL = 'blog-home'

#defaulttina olis   /accounts/login/?next=/profile/    eli error 404
#login viewiin on sisäänrakennettu muistamaan minne yritit. esim yrität mennä /profile sivulle ulos-kirjautuneena, niin 
#se ohjaa sut login sivulle, mutta muistaa, että ohjaa sut onnistuneen kirjautumisen jälkeen profile sivulle!
#http://127.0.0.1:8000/login/?next=/profile/    <- next profile
LOGIN_URL ='login'

#SMTP mail config
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
#TLS on parempi kuin SSL mutta perustuu siihe samaan
EMAIL_USE_TLS = True
#decoupled to .env file
EMAIL_HOST_USER = config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')
